security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    
    providers:
        
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
        
            provider: app_user_provider
            
            form_login:
                # "app_login" is the name of the route created previously
                login_path: user_app_login
                check_path: user_app_login

            logout:
                path: user_logout
            
                # where to redirect after logout
                # target: app_any_route
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

# when@test:
#     security:
#         password_hashers:
#             # Use native password hasher, which auto-selects and migrates the best
#             # possible hashing algorithm (which currently is "bcrypt")
#             Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
            
                
